[
  {
    "slug": "/api-reference/files",
    "title": "Files API",
    "description": "Overview of file access endpoints",
    "content": "Access snow cover and dynamics data files.\n\n## Available Endpoints\n\n* [Snow Cover Area](/api-reference/files/snow-cover-area)\n* [Snow Dynamics](/api-reference/files/snow-dynamics)\n"
  },
  {
    "slug": "/api-reference/files/snow-cover-area",
    "title": "Snow Cover Area",
    "description": "Access snow cover area measurements",
    "content": "Access snow cover area measurements for rivers.\n\n## Endpoint\n\n```http\nGET /api/rivers/{riverId}/files/snow-cover\n```\n\n## Response Format\n\n```json\n{\r\n  \"fileName\": \"1.png\",\r\n  \"fileUrl\": \"https://storage.url/snow-cover.png\",\r\n  \"metadata\": {\r\n    \"date\": \"2024-12-17\",\r\n    \"coverage\": \"75%\"\r\n  }\r\n}\n```\n\n## Usage Examples\n\n```bash\ncurl -X GET 'https://modsnow-api.onrender.com/api/rivers/angren/files/snow-cover' \\\r\n  -H 'x-api-key: your-api-key'\n```\n"
  },
  {
    "slug": "/api-reference/files/snow-dynamics",
    "title": "Snow Dynamics",
    "description": "Access snow cover dynamics data",
    "content": "Access dynamic snow cover measurements.\n\n## Endpoint\n\n```http\nGET /api/rivers/{riverId}/files/dynamics\n```\n\n## Response Format\n\n```json\n{\r\n  \"fileName\": \"2.jpeg\",\r\n  \"fileUrl\": \"https://storage.url/dynamics.jpeg\",\r\n  \"metadata\": {\r\n    \"startDate\": \"2024-01-01\",\r\n    \"endDate\": \"2024-12-17\",\r\n    \"interval\": \"daily\"\r\n  }\r\n}\n```\n"
  },
  {
    "slug": "/api-reference",
    "title": "API Reference",
    "description": "Complete API endpoint documentation",
    "content": "# API Reference\n\nExplore our API endpoints and their capabilities.\n\n## Available Endpoints\n\n* Rivers Data\n* Snow Cover Information\n* Historical Records\n\n## Authentication Required\n\nAll endpoints require an API key. See [Authentication Guide](/introduction/getting-started/authentication).\n"
  },
  {
    "slug": "/api-reference/rivers/get-all-rivers",
    "title": "Get All Rivers",
    "description": "Retrieve all available rivers",
    "content": "Retrieve a list of all available rivers and their data.\n\n## Endpoint\n\n```http\nGET /api/rivers\n```\n\n## Headers\n\n|\r\nHeader\r\n|\r\nRequired\r\n|\r\nDescription\r\n|\r\n|\n-\n\n## |\n\n## |\n\n|\r\n|\r\nx-api-key\r\n|\r\nYes\r\n|\r\nYour API key\r\n|\n\n## Response\n\n```json\n[\r\n  {\r\n    \"id\": \"river-id\",\r\n    \"title\": \"River Angren\",\r\n    \"description\": null,\r\n    \"files\": [\r\n      {\r\n        \"fileName\": \"1.png\",\r\n        \"fileUrl\": \"https://storage.url/snow-cover.png\"\r\n      },\r\n      {\r\n        \"fileName\": \"2.jpeg\",\r\n        \"fileUrl\": \"https://storage.url/dynamics.jpeg\"\r\n      }\r\n    ]\r\n  }\r\n]\n```\n"
  },
  {
    "slug": "/api-reference/rivers/get-specific-river",
    "title": "Get Specific River",
    "description": "Retrieve data for a specific river",
    "content": "Retrieve detailed information about a specific river.\n\n## Endpoint\n\n```http\nGET /api/rivers/{riverName}\n```\n\n## Parameters\n\n|\r\nParameter\r\n|\r\nType\r\n|\r\nDescription\r\n|\r\n|\n-\n\n## |\n\n## |\n\n|\r\n|\r\nriverName\r\n|\r\nstring\r\n|\r\nName of the river\r\n|\n\n## Response\n\n```json\n{\r\n  \"id\": \"river-id\",\r\n  \"title\": \"River Angren\",\r\n  \"description\": null,\r\n  \"files\": [\r\n    {\r\n      \"fileName\": \"1.png\",\r\n      \"fileUrl\": \"https://storage.url/snow-cover.png\"\r\n    }\r\n  ]\r\n}\n```\n"
  },
  {
    "slug": "/api-reference/rivers",
    "title": "Rivers API",
    "description": "Overview of Rivers endpoints",
    "content": "Access and manage river data through these endpoints.\n\n## Available Endpoints\n\n* [Get All Rivers](/api-reference/rivers/all-rivers)\n* [Get Specific River](/api-reference/rivers/specific-river)\n"
  },
  {
    "slug": "/guides/best-practices/error-handling",
    "title": "Error Handling",
    "description": "Best practices for handling API errors",
    "content": "Learn how to handle API errors effectively.\n\n## Error Codes\n\n* 400: Bad Request\n* 401: Unauthorized\n* 404: Not Found\n* 429: Rate Limit Exceeded\n* 500: Server Error\n\n## Example Error Response\n\n```json\n{\r\n  \"error\": \"Error message description\"\r\n}\n```\n"
  },
  {
    "slug": "/guides/best-practices",
    "title": "Best Practices",
    "description": "API usage best practices",
    "content": "Learn how to use the MODSNOW API effectively and efficiently.\n\n## Topics\n\n* [Error Handling](/guides/best-practices/error-handling)\n* [Rate Limiting](/guides/best-practices/rate-limiting)\n* [Data Management](/guides/best-practices/data-management)\n"
  },
  {
    "slug": "/guides/best-practices/rate-limiting",
    "title": "Rate Limiting Best Practices",
    "description": "How to handle rate limits effectively",
    "content": "## Monitoring Usage\n\n* Track your request count\n* Watch rate limit headers\n* Implement usage alerts\n\n## Implementation Tips\n\n```javascript\nfunction checkRateLimit(response) {\r\n  const remaining = response.headers.get('X-RateLimit-Remaining');\r\n  const reset = response.headers.get('X-RateLimit-Reset');\r\n  \r\n  if (remaining < 10) {\r\n    console.warn(`Rate limit warning: ${remaining} requests remaining`);\r\n  }\r\n}\n```\n\n## Handling Rate Limits\n\n1. Implement exponential backoff\n2. Cache responses when possible\n3. Optimize request patterns\n"
  },
  {
    "slug": "/guides/examples/curl",
    "title": "cURL Examples",
    "description": "Using the API with cURL",
    "content": "## Get All Rivers\n\n```bash\ncurl -X GET 'https://modsnow-api.onrender.com/api/rivers' \\\r\n  -H 'x-api-key: your-api-key'\n```\n\n## Get Specific River\n\n```bash\ncurl -X GET 'https://modsnow-api.onrender.com/api/rivers/angren' \\\r\n  -H 'x-api-key: your-api-key'\n```\n\n## Get Snow Cover Data\n\n```bash\ncurl -X GET 'https://modsnow-api.onrender.com/api/rivers/angren/files/snow-cover' \\\r\n  -H 'x-api-key: your-api-key'\n```\n"
  },
  {
    "slug": "/guides/examples",
    "title": "Examples",
    "description": "Code examples in different languages",
    "content": "Learn how to use the MODSNOW API with different programming languages.\n\n## Available Examples\n\n* [JavaScript](/guides/examples/javascript)\n* [Python](/guides/examples/python)\n* [cURL](/guides/examples/curl)\n"
  },
  {
    "slug": "/guides/examples/javascript",
    "title": "JavaScript Example",
    "description": "Using the API with JavaScript",
    "content": "## Using Fetch API\n\n```javascript\nconst API_KEY = 'your-api-key';\r\n\r\nasync function getAllRivers() {\r\n  const response = await fetch('https://modsnow-api.onrender.com/api/rivers', {\r\n    headers: {\r\n      'x-api-key': API_KEY\r\n    }\r\n  });\r\n  \r\n  const data = await response.json();\r\n  return data;\r\n}\n```\n\n## Error Handling\n\n```javascript\ntry {\r\n  const rivers = await getAllRivers();\r\n  console.log(rivers);\r\n} catch (error) {\r\n  console.error('Error:', error);\r\n}\n```\n"
  },
  {
    "slug": "/guides/examples/python",
    "title": "Python Example",
    "description": "Using the API with Python",
    "content": "## Using Requests\n\n```python\nimport requests\r\n\r\nAPI_KEY = 'your-api-key'\r\n\r\ndef get_all_rivers():\r\n    headers = {\r\n        'x-api-key': API_KEY\r\n    }\r\n    \r\n    response = requests.get(\r\n        'https://modsnow-api.onrender.com/api/rivers',\r\n        headers=headers\r\n    )\r\n    \r\n    return response.json()\n```\n"
  },
  {
    "slug": "/guides",
    "title": "Guides",
    "description": "Implementation guides and examples",
    "content": "# Implementation Guides\n\nLearn how to effectively use the MODSNOW API in your applications.\n\n## Available Guides\n\n* [JavaScript Implementation](/guides/examples/javascript)\n* [Python Implementation](/guides/examples/python)\n* [cURL Examples](/guides/examples/curl)\n\n## Best Practices\n\n* [Error Handling](/guides/best-practices/error-handling)\n* [Rate Limiting](/guides/best-practices/rate-limiting)\n"
  },
  {
    "slug": "/introduction/core-concepts",
    "title": "Core Concepts",
    "description": "Understanding MODSNOW API core concepts",
    "content": "# Core Concepts\n\nLearn about the fundamental concepts of the MODSNOW API.\n\n## Available Topics\n\n* [Rivers Data Structure](/introduction/core-concepts/rivers)\n* [Snow Cover Measurements](/introduction/core-concepts/snow-cover)\n* [Data Access Patterns](/introduction/core-concepts/data-access)\n"
  },
  {
    "slug": "/introduction/core-concepts/rivers",
    "title": "Rivers",
    "description": "Understanding river data structure",
    "content": "# River Data Structure\n\nLearn about how river data is organized in our API.\n\n## River Object Structure\n\n```json\n{\r\n  \"id\": \"river-id\",\r\n  \"title\": \"River Name\",\r\n  \"description\": \"River description\",\r\n  \"files\": []\r\n}\n```\n\n## Available Rivers\n\n* Angren\n* Chirchik\n* ahangaran\\_irtash\n* akdarya\\_gissarak\r\n  \\[and more...]\n\n## Data Types\n\nEach river includes:\n\n1. Basic Information\n2. Snow Cover Data\n3. Dynamic Measurements\n4. Historical Records\n"
  },
  {
    "slug": "/introduction/core-concepts/snow-cover",
    "title": "Snow Cover",
    "description": "Understanding snow cover measurements",
    "content": "# Snow Cover Data\n\nLearn about the types of snow cover data available through our API.\n\n## Data Types\n\n### Snow Cover Area (1.png)\n\n* Daily measurements\n* Area coverage statistics\n* Historical trends\n\n### Snow Cover Dynamics (2.jpeg)\n\n* Change over time\n* Seasonal patterns\n* Trend analysis\n\n## Data Format\n\nAll measurements follow standard units and formats for consistency.\n"
  },
  {
    "slug": "/introduction/getting-started/authentication",
    "title": "Authentication",
    "description": "Learn about API authentication",
    "content": "All API requests require authentication using an API key.\n\n## API Key Header\n\n```bash\nx-api-key: your-api-key\n```\n\n## Example Request\n\n```bash\ncurl -X GET 'https://modsnow-api.onrender.com/api/rivers' \\\r\n  -H 'x-api-key: your-api-key'\n```\n\n## Security Guidelines\n\n* Keep your API key secure\n* Don't expose it in client-side code\n* Use environment variables\n* Rotate keys if compromised\n"
  },
  {
    "slug": "/introduction/getting-started",
    "title": "Overview",
    "description": "Get started with MODSNOW API",
    "content": "# Getting Started with MODSNOW API\n\nMODSNOW provides real-time and historical snow cover data for Central Asian rivers through a RESTful API.\n\n## Features\n\n* Access to 40+ Central Asian rivers data\n* Real-time snow cover measurements\n* Historical data access\n* Snow cover dynamics analysis\n\n## Quick Start\n\n1. Get your API key from our team\n2. Make your first API request\n3. Explore available endpoints\n\n## Base URL\n\n```bash\nhttps://modsnow-api.onrender.com\n```\n"
  },
  {
    "slug": "/introduction/getting-started/rate-limits",
    "title": "Rate Limits",
    "description": "Understanding API rate limits",
    "content": "Our API implements rate limiting to ensure fair usage.\n\n## Default Limits\n\n* 1000 requests per day\n* 100 requests per 15 minutes\n\n## Response Headers\n\n```\nX-RateLimit-Limit: 1000\r\nX-RateLimit-Remaining: 999\r\nX-RateLimit-Reset: 1640995200\n```\n"
  },
  {
    "slug": "/introduction",
    "title": "Introduction",
    "description": "Introduction to MODSNOW API",
    "content": "# Introduction to MODSNOW API\n\nWelcome to the MODSNOW API documentation. Our API provides comprehensive access to snow cover data for Central Asian rivers.\n\n## Quick Navigation\n\n* [Getting Started Guide](/introduction/getting-started/overview)\n* [API Reference](/api-reference)\n* [Usage Examples](/guides/examples)\n* [Support](/support)\n"
  },
  {
    "slug": "/support/faq",
    "title": "FAQ",
    "description": "Frequently Asked Questions",
    "content": "## General Questions\n\n### How do I get an API key?\n\nContact our support team to request an API key.\n\n### What's the base URL?\n\nThe base URL is `https://modsnow-api.onrender.com`\n\n### Are there any rate limits?\n\nYes, see our [Rate Limits](/introduction/getting-started/rate-limits) page.\n"
  },
  {
    "slug": "/support",
    "title": "Support",
    "description": "Get help with the MODSNOW API",
    "content": "Need help with the MODSNOW API? We're here to assist you.\n\n## Quick Links\n\n* [FAQ](/support/faq)\n* [Troubleshooting Guide](/support/troubleshooting)\n\n## Contact Support\n\nFor direct assistance:\n\n* Email: support@modsnow.com\n* Technical Support Hours: 9:00-17:00 UTC\n"
  },
  {
    "slug": "/support/troubleshooting",
    "title": "Troubleshooting",
    "description": "Common issues and solutions",
    "content": "## Common Issues\n\n### API Key Issues\n\n* Ensure key is included in headers\n* Check key is valid and active\n* Verify correct header format\n\n### Rate Limiting\n\n* Check current usage\n* Monitor rate limit headers\n* Implement backoff strategy\n\n### Data Access\n\n* Verify river names\n* Check file availability\n* Ensure correct endpoint usage\n"
  }
]